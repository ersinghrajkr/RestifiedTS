{
  "api": {
    "baseURL": "${API_BASE_URL:https://api.example.com}",
    "timeout": "${API_TIMEOUT:30000}",
    "retries": "${API_RETRIES:3}",
    "headers": {
      "User-Agent": "RestifiedTS/1.1.0",
      "Content-Type": "application/json",
      "X-API-Key": "${API_KEY}"
    }
  },
  "authentication": {
    "bearer": {
      "token": "${AUTH_TOKEN}",
      "refreshToken": "${REFRESH_TOKEN}"
    },
    "basic": {
      "username": "${BASIC_USERNAME}",
      "password": "${BASIC_PASSWORD}"
    },
    "apiKey": {
      "key": "${API_KEY}",
      "header": "X-API-Key"
    },
    "oauth2": {
      "clientId": "${OAUTH2_CLIENT_ID}",
      "clientSecret": "${OAUTH2_CLIENT_SECRET}",
      "tokenUrl": "${OAUTH2_TOKEN_URL}",
      "scope": "${OAUTH2_SCOPE:read write}"
    }
  },
  "database": {
    "default": {
      "type": "postgresql",
      "host": "${DB_HOST:localhost}",
      "port": "${DB_PORT:5432}",
      "database": "${DB_NAME:test_db}",
      "username": "${DB_USER:test_user}",
      "password": "${DB_PASS:test_pass}",
      "ssl": false,
      "connectionTimeout": 10000,
      "pool": {
        "min": 1,
        "max": 10
      }
    },
    "mysql": {
      "type": "mysql",
      "host": "${MYSQL_HOST:localhost}",
      "port": "${MYSQL_PORT:3306}",
      "database": "${MYSQL_DB:test_db}",
      "username": "${MYSQL_USER:root}",
      "password": "${MYSQL_PASS:password}"
    },
    "mongodb": {
      "type": "mongodb",
      "connectionString": "${MONGO_URL:mongodb://localhost:27017/test_db}",
      "database": "${MONGO_DB:test_db}"
    },
    "sqlite": {
      "type": "sqlite",
      "database": "${SQLITE_DB:./test.db}"
    }
  },
  "reporting": {
    "enabled": true,
    "directory": "${REPORTS_DIR:output/reports}",
    "formats": ["html", "json"],
    "includeScreenshots": "${REPORT_INCLUDE_SCREENSHOTS:true}",
    "includeMetrics": "${REPORT_INCLUDE_METRICS:true}",
    "html": {
      "template": "mochawesome",
      "title": "${REPORT_TITLE:RestifiedTS Test Report}",
      "reportFilename": "test-report",
      "charts": true,
      "code": true,
      "autoOpen": "${REPORT_AUTO_OPEN:false}",
      "overwrite": true,
      "timestamp": true,
      "showPassed": true,
      "showFailed": true,
      "showPending": true,
      "showHooks": false
    },
    "performance": {
      "enabled": true,
      "thresholds": {
        "responseTime": "${PERFORMANCE_RESPONSE_TIME_MEDIAN:1000}",
        "errorRate": "${PERFORMANCE_ERROR_RATE_MAX:1}"
      }
    },
    "security": {
      "enabled": true,
      "includeVulnerabilities": true,
      "riskLevels": ["High", "Medium", "Low"]
    }
  },
  "snapshots": {
    "enabled": true,
    "directory": "${SNAPSHOTS_DIR:output/snapshots}",
    "updateSnapshots": false,
    "prettify": true
  },
  "logging": {
    "level": "${LOG_LEVEL:info}",
    "console": true,
    "file": {
      "enabled": true,
      "directory": "${LOGS_DIR:output/logs}",
      "filename": "restifiedts.log",
      "maxSize": "10MB",
      "maxFiles": 5
    },
    "audit": {
      "enabled": true,
      "filename": "audit.log"
    }
  },
  "performance": {
    "artillery": {
      "enabled": "${ARTILLERY_ENABLED:false}",
      "host": "${ARTILLERY_HOST:localhost}",
      "port": "${ARTILLERY_PORT:8080}",
      "timeout": "${ARTILLERY_TIMEOUT:120000}",
      "phases": [
        {
          "duration": 30,
          "arrivalRate": 1,
          "name": "warmup"
        },
        {
          "duration": 60,
          "arrivalRate": 10,
          "name": "rampup"
        }
      ]
    },
    "thresholds": {
      "responseTime": {
        "median": "${PERFORMANCE_RESPONSE_TIME_MEDIAN:500}",
        "p95": "${PERFORMANCE_RESPONSE_TIME_P95:1000}",
        "p99": "${PERFORMANCE_RESPONSE_TIME_P99:2000}"
      },
      "errorRate": "${PERFORMANCE_ERROR_RATE_MAX:1}",
      "throughput": "${PERFORMANCE_THROUGHPUT_MIN:100}"
    }
  },
  "security": {
    "zap": {
      "enabled": "${ZAP_ENABLED:false}",
      "apiUrl": "${ZAP_API_URL:http://localhost:8080}",
      "proxyHost": "${ZAP_PROXY_HOST:localhost}",
      "proxyPort": "${ZAP_PROXY_PORT:8081}",
      "timeout": "${ZAP_TIMEOUT:300000}",
      "policies": ["owasp-top-10", "api-security"],
      "scanTypes": ["spider", "active"]
    },
    "policies": {
      "allowHighRisk": "${SECURITY_ALLOW_HIGH_RISK:false}",
      "maxMediumRisk": "${SECURITY_MAX_MEDIUM_RISK:3}",
      "maxLowRisk": "${SECURITY_MAX_LOW_RISK:10}"
    }
  },
  "services": {
    "auth": {
      "baseURL": "${AUTH_SERVICE_URL:https://auth.example.com}",
      "timeout": "${AUTH_SERVICE_TIMEOUT:10000}"
    },
    "payment": {
      "baseURL": "${PAYMENT_SERVICE_URL:https://payments.example.com}",
      "timeout": "${PAYMENT_SERVICE_TIMEOUT:15000}",
      "headers": {
        "X-API-Key": "${PAYMENT_API_KEY}"
      }
    },
    "user": {
      "baseURL": "${USER_SERVICE_URL:https://users.example.com}",
      "timeout": "${USER_SERVICE_TIMEOUT:10000}"
    },
    "notification": {
      "baseURL": "${NOTIFICATION_SERVICE_URL:https://notifications.example.com}",
      "timeout": "${NOTIFICATION_SERVICE_TIMEOUT:5000}"
    },
    "order": {
      "baseURL": "${ORDER_SERVICE_URL:https://orders.example.com}",
      "timeout": "${ORDER_SERVICE_TIMEOUT:20000}"
    }
  },
  "variables": {
    "global": {
      "testEnvironment": "${NODE_ENV:development}",
      "testUser": "test@example.com",
      "testData": {
        "user": {
          "name": "Test User",
          "email": "test@example.com"
        }
      }
    }
  },
  "websocket": {
    "url": "${WS_URL:wss://echo.websocket.org}",
    "timeout": "${WS_TIMEOUT:10000}",
    "reconnectAttempts": "${WS_RECONNECT_ATTEMPTS:3}",
    "pingInterval": "${WS_PING_INTERVAL:30000}"
  },
  "graphql": {
    "url": "${GRAPHQL_URL:https://api.example.com/graphql}",
    "introspection": "${GRAPHQL_INTROSPECTION:true}",
    "playground": "${GRAPHQL_PLAYGROUND:false}",
    "timeout": "${GRAPHQL_TIMEOUT:15000}"
  },
  "proxy": {
    "http": "${HTTP_PROXY}",
    "https": "${HTTPS_PROXY}",
    "noProxy": "${NO_PROXY:localhost,127.0.0.1,*.local}"
  },
  "ssl": {
    "verify": "${SSL_VERIFY:true}",
    "certPath": "${SSL_CERT_PATH}",
    "keyPath": "${SSL_KEY_PATH}",
    "caPath": "${SSL_CA_PATH}"
  },
  "schema": {
    "validation": {
      "enabled": "${SCHEMA_VALIDATION_ENABLED:true}",
      "validators": "${SCHEMA_VALIDATORS:joi,zod,ajv}",
      "strictMode": "${SCHEMA_STRICT_MODE:false}"
    }
  },
  "mock": {
    "faker": {
      "locale": "${FAKER_LOCALE:en}",
      "seed": "${MOCK_DATA_SEED:12345}"
    },
    "server": {
      "port": "${MOCK_SERVER_PORT:3001}"
    }
  },
  "execution": {
    "parallel": {
      "maxTests": "${MAX_PARALLEL_TESTS:5}",
      "globalTimeout": "${TEST_TIMEOUT_GLOBAL:300000}",
      "retryAttempts": "${TEST_RETRY_ATTEMPTS:2}"
    }
  },
  "debug": {
    "mode": "${DEBUG_MODE:false}",
    "verbose": "${VERBOSE_LOGGING:false}",
    "captureTraffic": "${CAPTURE_NETWORK_TRAFFIC:false}",
    "saveFailedResponses": "${SAVE_FAILED_RESPONSES:true}"
  }
}